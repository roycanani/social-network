# Redirect all HTTP traffic to HTTPS:
server {
    listen 80;
    server_name node119.cs.colman.ac.il;
    return 301 https://$host$request_uri;
}

# HTTPS server block for your frontend (and reverse proxy for API, docs, images, etc.)
server {
    listen 443 ssl;
    server_name node119.cs.colman.ac.il;

    # SSL certificate configuration (using Let's Encrypt paths as an example)
    ssl_certificate /etc/nginx/ssl/ssl.crt;
    ssl_certificate_key /etc/nginx/ssl/ssl.key;

    # (Your existing location blocks go here)
    # For example:
    location = /docs {
        return 301 /api/docs;
    }
    location = /docs/ {
        return 301 /api/docs/;
    }
    location ^~ /docs/ {
        return 301 /api/docs$request_uri;
    }

    location = /images {
        return 302 /images/;
    }
    location /images/ {
        proxy_pass http://backend:4000/images/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        add_header X-Debug-Message "Proxying to images" always;
    }

    location = /api {
        return 302 /api/;
    }
    
    # Swagger documentation
    location ~* ^/api/docs(/.*)?$ {
        proxy_pass http://backend:4000/docs$1;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        add_header X-Debug-Message "Proxying to docs" always;
    }
    
    # Swagger UI assets
    location ~* ^/api/swagger-ui(/.*)?$ {
        proxy_pass http://backend:4000/swagger-ui$1;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        add_header X-Debug-Message "Proxying to swagger-ui" always;
    }
    
    # API requests
    location /api/ {
        proxy_pass http://backend:4000/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        add_header X-Debug-Message "Proxying to API" always;
    }

    # Frontend app
    location / {
        root /usr/share/nginx/html;
        index index.html index.htm;
        try_files $uri $uri/ /index.html;
    }
}